{"ast":null,"code":"var _jsxFileName = \"/Users/hellodigital/Documents/react-jalil/test-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Product from './components/Product';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.increment = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.decrement = () => {\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n\n    this.state = {\n      products: [],\n      currentCount: [],\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/api/getList').then(response => response.json()).then(data => {\n      this.setState({\n        products: data\n      });\n      console.log(data);\n    }).catch(error => {\n      console.log('error');\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row margin-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.products.map((product, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-md-4\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Product, {\n        data: product,\n        key: index,\n        count: this.state.currentCount[product.name],\n        increment: this.increment,\n        decrement: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    })), React.createElement(\"div\", {\n      className: \"row margin-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"offset-md-9 col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Generar Orden\")))), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Orden\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hellodigital/Documents/react-jalil/test-app/src/App.js"],"names":["React","Component","Product","App","constructor","props","increment","setState","count","state","decrement","products","currentCount","componentDidMount","fetch","then","response","json","data","console","log","catch","error","render","map","product","i","index","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Product from './components/Product';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); \n    this.state = {\n      products: [],\n      currentCount: [],\n      count: 0\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/api/getList')\n    .then(response => response.json())\n    .then(data => {\n      this.setState({products: data})\n      console.log(data)\n    })\n    .catch(error => {\n      console.log('error')\n    })\n  }\n\n  increment = () => {\n    this.setState({count: this.state.count + 1})\n  }\n\n  decrement = () => {\n    this.setState({count: this.state.count - 1})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row margin-div\">\n            <div className=\"col-md-8\">\n              <div className=\"row\">\n              {\n                this.state.products.map((product, i) => {\n                  return <div className=\"col-md-4\" key={i}>\n                    <Product data={product} \n                    key={index}\n                    count={this.state.currentCount[product.name]}\n                    increment={this.increment}\n                    decrement={this.decrement}/>\n                  </div>\n                })\n              }\n              </div>\n              <div className=\"row margin-div\">\n                <div className=\"offset-md-9 col-md-3\">\n                  <button className=\"btn btn-success btn-block\">Generar Orden</button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"row order\">\n                <h2>Orden</h2>\n                <table className=\"table\">\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ); \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}